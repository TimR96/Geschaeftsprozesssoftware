/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package de.riexinger.gui;

import de.riexinger.model.Kasse;
import de.riexinger.persistence.PersistenceAdapterKasse;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.math.BigDecimal;

/**
 *
 * @author Tim
 */
public class GUIKassenbestandAnpassen extends javax.swing.JFrame {

    private PersistenceAdapterKasse persistenceAdapterKasse;
    private GUIFriseursalon gUIFriseursalon;
    private Kasse kasse;
    BigDecimal kassenbestand =  new BigDecimal("0.0");
    
    public GUIKassenbestandAnpassen(PersistenceAdapterKasse persistenceAdapterKasse, GUIFriseursalon gUIFriseursalon) {
        this.persistenceAdapterKasse = persistenceAdapterKasse;
        this.gUIFriseursalon = gUIFriseursalon;
        kasse = new Kasse(kassenbestand);
        initComponents();
    }
    
    private void nurZahlen(java.awt.event.KeyEvent evt) {
        String key = String.valueOf(evt.getKeyChar());
        String erlaubteKeys = "0123456789";                 // nur diese Zeichen sind erlaubt
        if(!erlaubteKeys.contains(key)) {
            evt.consume();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtKassenbestandEuro = new javax.swing.JTextField();
        lblKassenbestand = new javax.swing.JLabel();
        btnKassenbestandSpeichern = new javax.swing.JButton();
        txtKassenbestandCent = new javax.swing.JTextField();
        lblEuro = new javax.swing.JLabel();
        lblCent = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kassenbestand anpassen");

        txtKassenbestandEuro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKassenbestandEuroKeyTyped(evt);
            }
        });

        lblKassenbestand.setText("Neuer Kassenbestand:");

        btnKassenbestandSpeichern.setText("Speichern");
        btnKassenbestandSpeichern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKassenbestandSpeichernActionPerformed(evt);
            }
        });

        txtKassenbestandCent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKassenbestandCentActionPerformed(evt);
            }
        });
        txtKassenbestandCent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKassenbestandCentKeyTyped(evt);
            }
        });

        lblEuro.setText("Euro");

        lblCent.setText("Cent");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnKassenbestandSpeichern, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblKassenbestand, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKassenbestandEuro, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEuro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKassenbestandCent, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCent)
                        .addGap(7, 7, 7)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKassenbestand)
                    .addComponent(txtKassenbestandEuro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKassenbestandCent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCent)
                    .addComponent(lblEuro))
                .addGap(31, 31, 31)
                .addComponent(btnKassenbestandSpeichern, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKassenbestandSpeichernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKassenbestandSpeichernActionPerformed
        try {    
            String cent = txtKassenbestandCent.getText();
            while(cent.length() < 2) { //Es sollen immer zweistellige Centbeträge angezeigt werden
                cent += "0";
            }
            String euro = txtKassenbestandEuro.getText();
            if (euro.isEmpty()) {
                euro = "0";
            }
            String betrag =  euro + "." + cent;                             //Kassenbestand zusammensetzen
            kasse.setKassenbestand(new BigDecimal(betrag));                 //Kassenbestand zu BigDecimal konvertieren
            if(persistenceAdapterKasse.set(kasse.getKassenbestand())){      //Kassenbestand in Datenbank speichern
                gUIFriseursalon.kassenbestandFormatieren(betrag);         //Kassenbestand durch Methode in GUI weiterleiten
                gUIFriseursalon.setKassenbestand(new BigDecimal(betrag));
                this.setVisible(false);
                this.dispose();
            } else{
                JOptionPane.showMessageDialog(this, "Kassenbestand konnte nicht gespeichert werden", "Fehler", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e)
        {
            if (e instanceof SQLException) {
                JOptionPane.showMessageDialog(this, "Datenbankfehler, Verbindung überprüfen\n\nFehlercode: "+e, "Fehler", JOptionPane.ERROR_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(this, "Eingabe überprüfen und ändern\n\nFehlercode: "+e, "Fehler", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnKassenbestandSpeichernActionPerformed

    private void txtKassenbestandEuroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKassenbestandEuroKeyTyped
    //Es sollen nur Zahlen ins Euro-Textfeld eingetragen werden können
    String key = String.valueOf(evt.getKeyChar());    
    String jumpKey = ",.";
    if(jumpKey.contains(key) || key.equals("\n")) {  // key.equals("\n") bedeutet, dass die Enter-Taste gedrückt wurde
            evt.consume();
            txtKassenbestandCent.requestFocus();
    }
    nurZahlen(evt);
    }//GEN-LAST:event_txtKassenbestandEuroKeyTyped

    private void txtKassenbestandCentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKassenbestandCentKeyTyped
    //Es sollen nur Zahlen und davon höchstens 2 ins Cent-Textfeld eingetragen werden können    
        nurZahlen(evt);
        if(txtKassenbestandCent.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtKassenbestandCentKeyTyped

    private void txtKassenbestandCentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKassenbestandCentActionPerformed
    //Durch das Drücken von Enter wird der Speichern-Button gedrückt    
        btnKassenbestandSpeichern.doClick();
    }//GEN-LAST:event_txtKassenbestandCentActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GUIKassenbestandAnpassen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GUIKassenbestandAnpassen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GUIKassenbestandAnpassen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GUIKassenbestandAnpassen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GUIKassenbestandAnpassen().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKassenbestandSpeichern;
    private javax.swing.JLabel lblCent;
    private javax.swing.JLabel lblEuro;
    private javax.swing.JLabel lblKassenbestand;
    private javax.swing.JTextField txtKassenbestandCent;
    private javax.swing.JTextField txtKassenbestandEuro;
    // End of variables declaration//GEN-END:variables
}
